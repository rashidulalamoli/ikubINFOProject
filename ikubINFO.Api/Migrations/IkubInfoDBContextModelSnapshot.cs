// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ikubINFO.DataAccess;

namespace ikubINFO.Api.Migrations
{
    [DbContext(typeof(IkubInfoDBContext))]
    partial class IkubInfoDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ikubINFO.DataAccess.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RoleGuid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedDate = new DateTime(2021, 9, 23, 4, 42, 24, 571, DateTimeKind.Utc).AddTicks(8521),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2021, 9, 23, 4, 42, 24, 571, DateTimeKind.Utc).AddTicks(9364),
                            RoleGuid = "7b68d63b-2da4-4622-abd3-5fc9a94e64fe",
                            Title = "User"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedDate = new DateTime(2021, 9, 23, 4, 42, 24, 572, DateTimeKind.Utc).AddTicks(117),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2021, 9, 23, 4, 42, 24, 572, DateTimeKind.Utc).AddTicks(123),
                            RoleGuid = "00f3a44b-570f-4bb3-bbe6-45a4aeca977d",
                            Title = "Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedDate = new DateTime(2021, 9, 23, 4, 42, 24, 572, DateTimeKind.Utc).AddTicks(681),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2021, 9, 23, 4, 42, 24, 572, DateTimeKind.Utc).AddTicks(692),
                            RoleGuid = "36ca7f43-41ae-4af3-a30b-a943dbde148b",
                            Title = "Super Admin"
                        });
                });

            modelBuilder.Entity("ikubINFO.DataAccess.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserGuid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__User__Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("ikubINFO.DataAccess.User", b =>
                {
                    b.HasOne("ikubINFO.DataAccess.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ikubINFO.DataAccess.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
